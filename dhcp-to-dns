#!rsc by RouterOS
# RouterOS script: dhcp-to-dns
# Copyright (c) 2013-2021 Christian Hesse <mail@eworm.de>
# https://git.eworm.de/cgit/routeros-scripts/about/COPYING.md
#
# check DHCP leases and add/remove/update DNS entries
# https://git.eworm.de/cgit/routeros-scripts/about/doc/dhcp-to-dns.md

:global Domain;
:global HostNameInZone;
:global Identity;
:global PrefixInZone;
:global ServerNameInZone;

:global CharacterReplace;
:global IfThenElse;
:global LogPrintExit;

:local Zone \
  ([ $IfThenElse ($PrefixInZone = true) "dhcp." ] . \
   [ $IfThenElse ($HostNameInZone = true) ($Identity . ".") ] . $Domain);
:local Ttl 5m;
:local CommentPrefix "managed by dhcp-to-dns for ";

:if ([ :len [ / ip dns static find where comment="--- dhcp-to-dns above ---" name=- type=NXDOMAIN disabled ] ] = 0) do={
  / ip dns static add comment="--- dhcp-to-dns above ---" name=- type=NXDOMAIN disabled=yes;
  $LogPrintExit warning "Added disabled static dns record with comment '--- dhcp-to-dns above ---'." false;
}
:local PlaceBefore ([ / ip dns static find where comment="--- dhcp-to-dns above ---" name=- type=NXDOMAIN disabled ]->0);

:foreach DnsRecord in=[ / ip dns static find where comment ~ $CommentPrefix ] do={
  :local DnsRecordVal [ / ip dns static get $DnsRecord ];
  :local MacAddress [ $CharacterReplace ($DnsRecordVal->"comment") $CommentPrefix "" ];
  :if ([ :len [ / ip dhcp-server lease find where mac-address=$MacAddress address=($DnsRecordVal->"address") status=bound ] ] > 0) do={
    $LogPrintExit debug ("Lease for " . $MacAddress . " (" . $DnsRecordVal->"name" . ") still exists. Not deleting DNS entry.") false;
  } else={
    :local Found false;
    $LogPrintExit info ("Lease expired for " . $MacAddress . " (" . $DnsRecordVal->"name" . "), deleting DNS entry.") false;
    / ip dns static remove $DnsRecord;
  }
}

:foreach Lease in=[ / ip dhcp-server lease find where status=bound ] do={
  :local LeaseVal [ / ip dhcp-server lease get $Lease ];
  :local Comment ($CommentPrefix . $LeaseVal->"mac-address");
  :local HostName [ $IfThenElse ([ :len ($LeaseVal->"host-name") ] = 0) \
    [ $CharacterReplace ($LeaseVal->"mac-address") ":" "-" ] \
    [ $CharacterReplace ($LeaseVal->"host-name") " " "" ] ];

  :local Fqdn ($HostName . "." . [ $IfThenElse ($ServerNameInZone = true) ($LeaseVal->"server" . ".") ] . $Zone);
  :local DnsRecord [ / ip dns static find where name=$Fqdn ];
  :if ([ :len $DnsRecord ] > 0) do={
    :local DnsIp [ / ip dns static get $DnsRecord address ];

    :local DupMacLeases [ / ip dhcp-server lease find where mac-address=($LeaseVal->"mac-address") status=bound ];
    :if ([ :len $DupMacLeases ] > 1) do={
      :set ($LeaseVal->"address") [ / ip dhcp-server lease get ($DupMacLeases->([ :len $DupMacLeases ] - 1)) address ];
    }

    :if ([ :len ($LeaseVal->"host-name") ] > 0) do={
      :set ($LeaseVal->"address") [ / ip dhcp-server lease get ([ find where host-name=($LeaseVal->"host-name") status=bound ]->0) address ];
    }

    :if ($DnsIp = $LeaseVal->"address") do={
      $LogPrintExit debug ("DNS entry for " . $Fqdn . " does not need updating.") false;
    } else={
      $LogPrintExit info ("Replacing DNS entry for " . $Fqdn . ", new address is " . $LeaseVal->"address" . ".") false;
      / ip dns static set name=$Fqdn address=($LeaseVal->"address") ttl=$Ttl comment=$Comment $DnsRecord;
    }
  } else={
    $LogPrintExit info ("Adding new DNS entry for " . $Fqdn . ", address is " . $LeaseVal->"address" . ".") false;
    / ip dns static add name=$Fqdn address=($LeaseVal->"address") ttl=$Ttl comment=$Comment place-before=$PlaceBefore;
  }
}
